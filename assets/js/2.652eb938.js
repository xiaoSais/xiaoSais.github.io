(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{166:function(a,s,e){a.exports=e.p+"assets/img/steps.279c7911.png"},167:function(a,s,e){a.exports=e.p+"assets/img/step1.3279af62.png"},168:function(a,s,e){a.exports=e.p+"assets/img/step2.4f394a54.png"},169:function(a,s,e){a.exports=e.p+"assets/img/step3.7a54669a.png"},178:function(a,s,e){"use strict";e.r(s);var t=[function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"二、内存控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、内存控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、内存控制")]),a._v(" "),t("h2",{attrs:{id:"内存分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存分配","aria-hidden":"true"}},[a._v("#")]),a._v(" 内存分配")]),a._v(" "),t("p",[a._v("Js中的对象都是保存在堆中的，当声明对象并赋值的时候，就会占用已申请的空闲空间，当空闲空间大小不够时就会继续申请空间，直到超出v8的限制。")]),a._v(" "),t("h2",{attrs:{id:"v8的垃圾回收机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8的垃圾回收机制","aria-hidden":"true"}},[a._v("#")]),a._v(" v8的垃圾回收机制")]),a._v(" "),t("p",[a._v("v8中的堆内存分为两块，新生代内存和老生代内存。新生代内存保存在内存中存活时间较短的对象，老生代内存保存在内存中存活时间较长或者常驻内存的对象。")]),a._v(" "),t("h3",{attrs:{id:"scavenge-算法（新生代内存）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scavenge-算法（新生代内存）","aria-hidden":"true"}},[a._v("#")]),a._v(" Scavenge 算法（新生代内存）")]),a._v(" "),t("p",[a._v("原理：新生代中对象主要依靠Scavenge算法进行垃圾回收，该算法先将堆内存空间一分为二，一半处于闲置状态，一半处于使用状态，分别叫做To空间和From空间。在进行垃圾回收时，会将From空间的存活对象复制到To空间内，非存活对象占用的空间就会被释放。完成复制后，两个空间的角色发生互换。")]),a._v(" "),t("p",[a._v("缺点：内存只能利用一半，典型的空间换时间的做法。")]),a._v(" "),t("p",[a._v("当一个对象经过多次复制依然存活时，就会从新生代空间转移到老生代空间，这种方式被称为晋升。")]),a._v(" "),t("p",[a._v("对象晋升的条件，一是该对象是否经历过Scavenge算法的回收，二是对象To空间的内存占用比超过限制（25%）。")]),a._v(" "),t("h3",{attrs:{id:"标记清除和标记整理（老生代内存）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记清除和标记整理（老生代内存）","aria-hidden":"true"}},[a._v("#")]),a._v(" 标记清除和标记整理（老生代内存）")]),a._v(" "),t("p",[a._v("老生代内存中存活对象占较大比重，如果还是采用Scavenge算法复制存活的对象效率较低，同时还要浪费一半的内存空间。")]),a._v(" "),t("p",[a._v("标记清除原理：标记清除在在标记阶段会遍历所有的对象，但是只会标记活着的对象，在标记清除阶段会清除没有被标记的对象。与Scavenge不同的是，标记清除只会清除没有被标记的对象。")]),a._v(" "),t("p",[a._v("缺点：进行一次标记清除会出现内存不连续的情况，无法保存一个大内存对象。")]),a._v(" "),t("p",[a._v("标记整理原理：在标记对象死亡后，将活着的对象向内存一端移动，移动完成后直接清除掉边界外的内存。")]),a._v(" "),t("h3",{attrs:{id:"增量标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增量标记","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量标记")]),a._v(" "),t("p",[a._v("以上三种垃圾回收算法都要暂停Js的执行逻辑，新生代存活对象较少，即使是全停顿也影响不大。老生代采用增量标记的策略，将标记拆分为很多步，每做完一次标记就让Js逻辑执行一会，直到标记完成。")]),a._v(" "),t("h2",{attrs:{id:"node查看内存占用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node查看内存占用","aria-hidden":"true"}},[a._v("#")]),a._v(" Node查看内存占用")]),a._v(" "),t("h3",{attrs:{id:"node-自带-profile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-自带-profile","aria-hidden":"true"}},[a._v("#")]),a._v(" Node 自带 profile")]),a._v(" "),t("ul",[t("li",[a._v("第一步：以 --prof 命令启动Node")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  node --prof index.js\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("第二步：处理生成的log文件")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  node --prof-process isolate-0XXXXXXXXXXX-v8-XXXX.log > profile.txt\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("分析 profile.txt")])]),a._v(" "),t("h3",{attrs:{id:"使用heapdump"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用heapdump","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用heapdump")]),a._v(" "),t("ul",[t("li",[a._v("第一步: 安装 node-heapdump")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  npm install heapdump\n\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("ul",[t("li",[a._v("第二步: 在代码中应用 node-headdump")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  var heapdump = require('heapdump');\n  heapdump.writeSnapshot(function(err, filename) {\n    console.log('dump written to', filename);\n  });\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("ul",[t("li",[a._v("第三步: 启动应用")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  node app.js\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("第四步： 生成快照")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  kill -USR2 <pid>\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"使用alinode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用alinode","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用alinode")]),a._v(" "),t("p",[a._v("阿里自研强大的Node监控云平台，Ubuntu16.04搭建步骤：")]),a._v(" "),t("p",[a._v("第一步：安装tnvm（淘宝的node版本管理工具）")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  bash -c "$(curl -fsSL https://raw.githubusercontent.com/aliyun-node/tnvm/master/install.sh)"\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如果遇到 403 forbidden，就将https变成http。")]),a._v(" "),t("p",[a._v("第二步：加入到全局变量")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  source ~/.bashrc\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第三步：查看需要安装的alinode版本")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  tnvm ls-remote alinode\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第四步：选择版本安装")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  tnvm install alinode-v5.9.0\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第五步：使用alinode")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  tnvm use linode-v5.9.0\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第六步：安装 agenthub")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install @alicloud/agenthub -g\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第七步：创建实例")]),a._v(" "),t("p",[a._v("登录 https://node.console.aliyun.com，如果没有账号，可以免费创建。创建实例并将下图的appId和appSecret保存到config.json里。")]),a._v(" "),t("p",[t("img",{attrs:{src:e(166),alt:"solar"}})]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  // config.json\n  {\n    \n    "appid": "83229",\n    "secret": "7d5280223cf8a47e1e3450ee461aaafa9e71021b"\n  }\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("第八步：将config.json移动到项目根目录下")]),a._v(" "),t("p",[a._v("第九步：开启上报工具")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  agenthub start alinode.config.json \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第十步：启动应用")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  // 直接启动\n  ENABLE_NODE_LOG=YES node app.js \n  // 或者PM2 启动\n  ENABLE_NODE_LOG=YES pm2 start pm2.js \n  // 或者其他任何方式，但要加上 ENABLE_NODE_LOG=YES 开启日志。\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("第十一步：查看监控数据")]),a._v(" "),t("p",[t("img",{attrs:{src:e(167),alt:"solar"}})]),a._v(" "),t("p",[t("img",{attrs:{src:e(168),alt:"solar"}})]),a._v(" "),t("p",[t("img",{attrs:{src:e(169),alt:"solar"}})])])}],n=e(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},t,!1,null,null,null);r.options.__file="memory.md";s.default=r.exports}}]);