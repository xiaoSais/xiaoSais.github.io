(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{188:function(s,e,n){"use strict";n.r(e);var a=n(0),t=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"六、拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、拦截器","aria-hidden":"true"}},[s._v("#")]),s._v(" 六、拦截器")]),s._v(" "),n("p",[s._v("相关文件路径 /lib/core/Axios.js && /lib/core/InterceptorManager.js")]),s._v(" "),n("h3",{attrs:{id:"何为拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#何为拦截器","aria-hidden":"true"}},[s._v("#")]),s._v(" 何为拦截器")]),s._v(" "),n("p",[s._v("拦截器（InterceptorManager）其实是一个中间件，axios 定义了两种 interceptor（axios.interceptors.request 和 axios.interceptors.response）在axios发起请求前或者请求后调用，用于变更 config |  response。")]),s._v(" "),n("h3",{attrs:{id:"注册拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册拦截器","aria-hidden":"true"}},[s._v("#")]),s._v(" 注册拦截器")]),s._v(" "),n("p",[s._v("1、eg: 使用 axios 正常发起发起请求：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  axios['get']('http://10.199.214.233:9876/vqp/config')\n    .then(response => {\n      console.log(response)\n    }).catch(err => {\n      console.log(err)\n    })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("打印出来的 response 除了接口返回的数据外，还有配置项等信息：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  {\n    // 接口返回数据\n    data: [],\n    // 响应状态\n    status: 200,\n    // 响应状态描述\n    statusText: \'ok\',\n    // 响应头\n    headers: {\n      content-length: "6502",\n      content-type: "application/json; charset=utf-8"\n    },\n    // axios 配置信息\n    config: {},\n    // 响应对象\n    request: {}\n  }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("2、eg: 使用 interceptor")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  // 增加请求前的拦截器\n  axios.interceptors.request.use(function (config) {\n      // 发起请求之前改变 axios 配置，修改超时时间\n      config.timeout = 200\n      return config;\n    }, function (error) {\n      // 请求出错在这可以处理\n      return Promise.reject(error);\n    });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  // 增加响应后、返回前拦截器\n  axios.interceptors.response.use(function (response) {\n      // 处理响应数据，如果响应状态为200，只返回 response.data 和 response.config\n      if (response.status === 200) {\n        return {\n          data: response.data,\n          config: response.config\n        }\n      } else return 'error'\n    }, function (error) {\n      // 相应出错可以在这里处理\n      return Promise.reject(error);\n    });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("打印出来的response为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  {\n    data: [],\n    config: {\n      ...,\n      timeout: 200\n    }\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("axios对拦截器的处理顺序为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  axios.interceptors.request => axios[method] =>  axios.interceptors.response\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("分别对应三个阶段：还未发起请求(interceptors.request[config]) => 发起请求并根据后端响应拿到Response => 处理请求（interceptors.response[Response]）=> 返回处理后的Response")]),s._v(" "),n("h3",{attrs:{id:"注销拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注销拦截器","aria-hidden":"true"}},[s._v("#")]),s._v(" 注销拦截器")]),s._v(" "),n("p",[s._v("可以使用 axios.interceptors.request.eject(interceptor) | axios.interceptors.response.eject(interceptor) 来移除拦截器")]),s._v(" "),n("p",[s._v("eg:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  // 添加拦截器\n  var interceptor = axios.interceptors.request.use(function (config) {\n      // 发起请求之前改变 axios 配置，修改超时时间\n      config.timeout = 200\n      return config;\n    }, function (error) {\n      // 请求出错在这可以处理\n      return Promise.reject(error);\n    });\n  // 发起请求，拦截器生效\n  axios['get']('http://10.199.214.233:9876/vqp/config')\n    .then(response => {\n      // 200\n      console.log(response.config.timeout)\n    }).catch(err => {\n      console.log(err)\n    })\n  \n  // 注销拦截器\n  axios.interceptors.request.eject(interceptor)\n  // 发起请求，测试拦截器是否已经注销\n  axios['get']('http://10.199.214.233:9876/vqp/config')\n    .then(response => {\n      // 0\n      console.log(response.config.timeout)\n    }).catch(err => {\n      console.log(err)\n    })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"axios-拦截器原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#axios-拦截器原理","aria-hidden":"true"}},[s._v("#")]),s._v(" axios 拦截器原理")]),s._v(" "),n("p",[s._v("文件路径： /lib/core/Axios.js")]),s._v(" "),n("p",[s._v("在 Axios 构造函数里创建了一个interceptors 对象。保存 Request 和 Response 的 interceptor 实例。这也是我们可以使用 axios.interceptors.request |  axios.interceptors.response 的原因。")]),s._v(" "),n("p",[s._v("line: 14 - 20")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  function Axios(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("InterceptorManager 构造函数， 在文件 /lib/InterceptorManager.js 里定义，这个文件很短，只有52行：")]),s._v(" "),n("h4",{attrs:{id:"构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 构造函数")]),s._v(" "),n("p",[s._v("InterceptorManager 构造函数为实例创建了一个   handlers 数组用于保存拦截器的处理函数。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  function InterceptorManager() {\n    this.handlers = [];\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"interceptormanager-prototype-use-resolve-reject"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interceptormanager-prototype-use-resolve-reject","aria-hidden":"true"}},[s._v("#")]),s._v(" InterceptorManager.prototype.use(resolve, reject)")]),s._v(" "),n("p",[s._v("前面举例说了一下拦截器的使用方式，再贴一下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var interceptor = axios.interceptors.request.use(function (config) {\n      // 发起请求之前改变 axios 配置，修改超时时间\n      config.timeout = 200\n      return config;\n    }, function (error) {\n      // 请求出错在这可以处理\n      return Promise.reject(error);\n    });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("当调用 axios.interceptors.response.use 的时候，实际上就是调用的InterceptorManager.prototype.use 这个方法，这个方法返回拦截器的Id，以便于有需要的话注销该拦截器。")]),s._v(" "),n("p",[s._v("line: 17 - 23")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  InterceptorManager.prototype.use = function use(fulfilled, rejected) {\n    this.handlers.push({\n      fulfilled: fulfilled,\n      rejected: rejected\n    });\n    return this.handlers.length - 1;\n  };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("调用 use 的时候，往 handles 数组里 push 一个对象，该对象的两个属性分别对应 Promise.then 和 Primise.reject 需要处理的函数，也就是调用的时候传的两个参数。")]),s._v(" "),n("h4",{attrs:{id:"interceptormanager-prototype-eject-id"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interceptormanager-prototype-eject-id","aria-hidden":"true"}},[s._v("#")]),s._v(" InterceptorManager.prototype.eject(id)")]),s._v(" "),n("p",[s._v("注销拦截器即调用该函数，将对应Id的拦截器对象置位 null。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  InterceptorManager.prototype.eject = function eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("id 即为use的时候返回的拦截器的idx。")]),s._v(" "),n("h4",{attrs:{id:"interceptormanager-prototype-foreach-fn-interceptor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interceptormanager-prototype-foreach-fn-interceptor","aria-hidden":"true"}},[s._v("#")]),s._v(" InterceptorManager.prototype.forEach(fn(interceptor))")]),s._v(" "),n("p",[s._v("该方法用于遍历拦截器，interceptor 即为 handles 里的每一个元素，同时该函数会跳过为 null 的元素。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  InterceptorManager.prototype.forEach = function forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("给 util.forEach 封装了一层。")]),s._v(" "),n("h4",{attrs:{id:"调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#调用","aria-hidden":"true"}},[s._v("#")]),s._v(" 调用")]),s._v(" "),n("p",[s._v("上面分析完了 interceptor 类的所有方法，来看看在Axios内部是如何处理的，文件同样是 /lib/core/Axios.js。")]),s._v(" "),n("p",[s._v("line: 50 - 51")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  Axios.prototype.request = function request(config) {\n\n    ...\n    var chain = [dispatchRequest, undefined];\n    var promise = Promise.resolve(config);\n\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      chain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      chain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n    return promise;\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("1、request 函数在内部创建名为 chain 队列，该队列保存所有需要执行的 Promise 方法。初始化两个元素 dispatchRequest和 undefined，dispatchRequest 为真正处理 axios[method]成功的promise，undefined是为了处理失败时候情况。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var chain = [dispatchRequest, undefined];\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("2、创建一个基于 axios.config 的 promise 对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var promise = Promise.resolve(config);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("3、上文提到当我们使用对应的 interceptor.use 的时候，会向 handles 放入对应的处理函数。在执行axios[method]方法时，会遍历handles，针对两种拦截器（request | response）会分别在 chain 的队头 | 队尾添加这些处理函数，一次会同时添加两个处理函数，即成功时的和失败时的。如果设置拦截器的话 chain 队列会变成这样：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  [requestResolve,  requestReject, dispatchRequest, undefined, responseREsolve, responseReject]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("4、依次拿出队头元素作为 promise.then() 对象的参数，直到队列为空。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("因为 promise 是基于 axios.config 创建，所以在执行 requestResolve 的时候拿到的参数就是 axios.config。promise.then() 方法由于返回的是新promise，所以这边要将 promise 重新赋值，用于将上一步的结果传递给下一个promise。")])])}],!1,null,null,null);t.options.__file="Interceptors.md";e.default=t.exports}}]);