(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{226:function(s,e,n){"use strict";n.r(e);var a=n(17),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"七、请求分发-适配器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七、请求分发-适配器"}},[s._v("#")]),s._v(" 七、请求分发 && 适配器")]),s._v(" "),n("p",[s._v("在"),n("a",{attrs:{href:"/Interceptors.html"}},[s._v("拦截器")]),s._v("一文中提到，我们使用对应的 interceptor.use 的时候，会向 handles 放入对应的处理函数，针对两种拦截器会分别在 chain 的队头和队尾添加这些处理函数，当设置拦截器时，chain 队列会变成这样：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  [requestResolve,  requestReject, dispatchRequest, undefined, responseResolve, responseReject]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果没有设置拦截器 chain 队列就是默认值即: [dispatchRequest, undefined]，dispatchRequest 即为调用 axios[method] 时真正的处理函数。然后基于 axios.config 创建promise实例，循环 chain 队列，依次调用这些处理函数。")]),s._v(" "),n("p",[s._v("由于 promise 是基于 axios.config 创建的，所以在 promise.then() 里执行的 dispatchRequest 入参应该也是 axios.config。")]),s._v(" "),n("h3",{attrs:{id:"dispatch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dispatch"}},[s._v("#")]),s._v(" dispatch")]),s._v(" "),n("p",[s._v("文件路径：/lib/core/dispatchRequest.js")]),s._v(" "),n("p",[s._v("dispatchRequest 方法的定义在 line 23 - 79，该方法的传参正如我们所想就是 axios.config，返回一个Promise。")]),s._v(" "),n("p",[s._v("line 24 - line 41:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  module.exports = function dispatchRequest(config) {\n    throwIfCancellationRequested(config);\n\n    // Ensure headers exist\n    config.headers = config.headers || {};\n\n    // Transform request data\n    config.data = transformData(\n      config.data,\n      config.headers,\n      config.transformRequest\n    );\n\n    // Flatten headers\n    config.headers = utils.merge(\n      config.headers.common || {},\n      config.headers[config.method] || {},\n      config.headers\n    );\n\n    utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      function cleanHeaderConfig(method) {\n        delete config.headers[method];\n      }\n    );\n    ....\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("1、throwIfCancellationRequested(config) 函数用来取消请求的 cancel token。")]),s._v(" "),n("p",[s._v("2、确保 config.headers 存在，因为下一步会用到 config.headers")]),s._v(" "),n("p",[s._v("3、根据配置项的 config.transformRequest 来转化请求数据。\n文档上的该配置项的使用方法为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  transformRequest: [function (data, headers) {\n    // 对 data 进行任意转换处理\n    return data;\n  }],\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("transformRequest 的传参是一个数组，可以传入多个函数依次调用，返回的 data 为最后一次调用的处理函数的结果。")]),s._v(" "),n("p",[s._v("在 axios 里它的实现方式为：")]),s._v(" "),n("p",[s._v("文件路径：/lib/core/transformData.js")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  module.exports = function transformData(data, headers, fns) {\n    /*eslint no-param-reassign:0*/\n    utils.forEach(fns, function transform(fn) {\n      data = fn(data, headers);\n    });\n\n    return data;\n  };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("通过 util.forEach() 方法遍历 transformData 方法传入的第三个参数fns，在这里fns 指的是 config.transformRequest，然后依次调用每一个fn，得到的结果（data） 传给下一个 fn。最后返回处理完成的 data。")]),s._v(" "),n("p",[s._v("4、扁平化 headers。")]),s._v(" "),n("p",[s._v("5、删除 config.headers[method] ??? 为啥要删除。")]),s._v(" "),n("p",[s._v("line 50 - line 78:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  module.exports = function dispatchRequest(config) {\n    ...\n\n    var adapter = config.adapter || defaults.adapter;\n\n    return adapter(config).then(function onAdapterResolution(response) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      response.data = transformData(\n        response.data,\n        response.headers,\n        config.transformResponse\n      );\n\n      return response;\n    }, function onAdapterRejection(reason) {\n      if (!isCancel(reason)) {\n        throwIfCancellationRequested(config);\n\n        // Transform response data\n        if (reason && reason.response) {\n          reason.response.data = transformData(\n            reason.response.data,\n            reason.response.headers,\n            config.transformResponse\n          );\n        }\n      }\n      return Promise.reject(reason);\n    });\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("这一部分主要是选择对应的 adapter(config | defaults.adapter)，执行 then()方法得到 Response，adapter 应该是一个 thenable 的对象。最后同样通过 config.transformResponse 去转化 response data。")]),s._v(" "),n("h3",{attrs:{id:"adaptper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adaptper"}},[s._v("#")]),s._v(" adaptper")]),s._v(" "),n("p",[s._v("在"),n("a",{attrs:{href:"config.html"}},[s._v("默认配置项")]),s._v("一文中，简单介绍了下默认的 adapter 配置：")]),s._v(" "),n("blockquote",[n("p",[s._v("该选项决定了 axios 根据何种方式处理 ajax 请求，它是可写的，允许用户自定义处理请求。默认情况下会检查当前环境，如果浏览器环境会引入 ./adapters/xhr 文件处理，如果为 node 环境会引入 ./adapter/http 文件处理。")])]),s._v(" "),n("h4",{attrs:{id:"adapter-xhr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adapter-xhr"}},[s._v("#")]),s._v(" adapter(xhr)")]),s._v(" "),n("p",[s._v("文件路径：/lib/adapters/xhr.js")]),s._v(" "),n("p",[s._v("由上文明显可以看到，adapter 的传参是 axios.config，config 在 dispatchRequest 函数里已经处理过。adapter 是个thenable 的函数，猜想 adapter 函数应该返回一个 Promise。")]),s._v(" "),n("p",[s._v("该路径下的文件是浏览器环境引入的，应该是调用的原生 XMLHttpRequest 对象处理 ajax 请求。")]),s._v(" "),n("p",[s._v("line 11 - 20：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  module.exports = function xhrAdapter(config) {\n    return new Promise(function dispatchXhrRequest(resolve, reject) {\n      var requestData = config.data;\n      var requestHeaders = config.headers;\n\n      if (utils.isFormData(requestData)) {\n        delete requestHeaders['Content-Type']; // Let the browser set it\n      }\n\n      var request = new XMLHttpRequest();\n      ...\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("印证了我们的猜想，xhr adapter 返回了一个Promise，同时创建两个变量 requestData 和 requestHeaders，\n判断 requestData 是否为 formData，是的话删除content-Type。与此同时还创建了 request 变量，一个XMLHttpRequest 实例。")]),s._v(" "),n("p",[s._v("line 23 - 33")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  ...\n  if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n  ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("提供基本HTTP验证，如果配置中传入了 auth，会将相应的数据经过 btoa 编码写入到请求头里。然后调用 xhr.open(method, url) 初始化一个请求。第三个参数为 true 代表：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("一个可选的布尔参数，默认为true，表示要不要异步执行操作。如果值为false，send()方法直到收到答复前不会返回。如果true，已完成事务的通知可供事件监听器使用。如果multipart属性为true则这个必须为true，否则将引发异常。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这个参数决定了 xhr 对象是否可以调用事件侦听器处理 xhr 不同阶段的数据。")]),s._v(" "),n("p",[s._v("line 105 - line 116 主要是设置 xsrfHeaders.")]),s._v(" "),n("p",[s._v("line 119 - line 128 给 request 对象挂载请求头。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  ...\n  if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n  }\n  ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("line 178, 发送请求。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  request.send(requestData);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("line 36 - line 100, 主要是通过侦听器判断请求的状态进行不同的处理。")]),s._v(" "),n("p",[s._v("onreadystatechange readyState 发生改变的回调。下标列出了可能存在的值，需要注意的是为 4 的时候代表数据返回成功。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  0\tUNSENT\t代理被创建，但尚未调用 open() 方法。\n  1\tOPENED\topen() 方法已经被调用。\n  2\tHEADERS_RECEIVED\tsend() 方法已经被调用，并且头部和状态已经可获得。\n  3\tLOADING\t下载中； responseText 属性已经包含部分数据。\n  4\tDONE\t下载操作已完成。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("line 36 - line 65, 数据返回成功，封装返回数据。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("这段代码主要是监听 readyState 的值，如果为 4 的话，封装 response 的并返回，注意接口返回的值也是挂载到 request 对象上的。我们在 Interceptors 一章中举例说明了一下 axios 的返回数据结构，和这边定义的也是一致的，")]),s._v(" "),n("p",[s._v("line 68 - line 100，主要是处理 abort，error，timeout 的情况。这边不做深入分析。")]),s._v(" "),n("h4",{attrs:{id:"adapter-http-https"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adapter-http-https"}},[s._v("#")]),s._v(" adapter(http/https)")]),s._v(" "),n("p",[s._v("基于 http / https 的适配器，用于在非浏览器环境下发起请求。说一下核心思路吧。")]),s._v(" "),n("h4",{attrs:{id:"_1、选择处理模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、选择处理模块"}},[s._v("#")]),s._v(" 1、选择处理模块")]),s._v(" "),n("p",[s._v("axios 选项中定义了一个 transport 属性，允许你重写 axios 内部在非浏览器环境下的请求方式。但是在 axios 文档中并没有写。")]),s._v(" "),n("p",[s._v("https.js line 161 - line 172")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var transport;\n  var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n  if (config.transport) {\n    transport = config.transport;\n  } else if (config.maxRedirects === 0) {\n    transport = isHttpsProxy ? https : http;\n  } else {\n    if (config.maxRedirects) {\n      options.maxRedirects = config.maxRedirects;\n    }\n    transport = isHttpsProxy ? httpsFollow : httpFollow;\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("axios 会根据是否是 https 请求选用 https / http模块，同时如果选用了 maxRedirects 将会采用 follow-redirects 模块。")]),s._v(" "),n("p",[s._v("follow-redirects 是 http / https 的替代品，用于更好的处理重定向相关的请求。"),n("a",{attrs:{href:"https://www.npmjs.com/package/follow-redirects"}},[s._v("follow-redirects")])]),s._v(" "),n("h4",{attrs:{id:"_2、处理请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、处理请求"}},[s._v("#")]),s._v(" 2、处理请求")]),s._v(" "),n("p",[s._v("基于流的方式处理响应。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var req = transport.request(options, function handleResponse(res) {\n  if (req.aborted) return;\n\n  // uncompress the response body transparently if required\n  var stream = res;\n  switch (res.headers['content-encoding']) {\n  /*eslint default-case:0*/\n  case 'gzip':\n  case 'compress':\n  case 'deflate':\n    // add the unzipper to the body stream processing pipeline\n    stream = (res.statusCode === 204) ? stream : stream.pipe(zlib.createUnzip());\n\n    // remove the content-encoding in order to not confuse downstream operations\n    delete res.headers['content-encoding'];\n    break;\n  }\n\n  // return the last request in case of redirects\n  var lastRequest = res.req || req;\n\n  var response = {\n    status: res.statusCode,\n    statusText: res.statusMessage,\n    headers: res.headers,\n    config: config,\n    request: lastRequest\n  };\n\n  if (config.responseType === 'stream') {\n    response.data = stream;\n    settle(resolve, reject, response);\n  } else {\n    var responseBuffer = [];\n    stream.on('data', function handleStreamData(chunk) {\n      responseBuffer.push(chunk);\n\n      // make sure the content length is not over the maxContentLength if specified\n      if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n        stream.destroy();\n        reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n          config, null, lastRequest));\n      }\n    });\n\n    stream.on('error', function handleStreamError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, lastRequest));\n    });\n\n    stream.on('end', function handleStreamEnd() {\n      var responseData = Buffer.concat(responseBuffer);\n      if (config.responseType !== 'arraybuffer') {\n        responseData = responseData.toString(config.responseEncoding);\n      }\n\n      response.data = responseData;\n      settle(resolve, reject, response);\n    });\n  }\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br")])]),n("p",[s._v("通过 http.request(options, func) 回调里拿到 res, res 是基于 stream 的，监听 res 的 data 事件，不断的拿到 chunk 放到 结果数组里。然后监听 end 事件，把结果数组转化一下再 resolve 出去。options 是通过传入的 config 拼装而成。 response 数据结构和 xhr 方式一致。以达到统一的效果。")])])}),[],!1,null,null,null);e.default=t.exports}}]);